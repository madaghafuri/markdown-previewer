{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","input","setInput","className","class","id","onChange","event","target","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMA+BeA,EA3BH,WAEV,MAA0BC,mBAAS,iPAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACE,OACE,qBAAKC,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,sBAAKC,MAAM,cAAcD,UAAU,WAAnC,UACE,wCAGA,0BAAUE,GAAG,SAASC,SAAU,SAACC,GAAD,OAAWL,EAASK,EAAMC,OAAOC,QAAQA,MAAOR,OAElF,sBAAKG,MAAM,eAAeD,UAAU,WAApC,UACE,2CAGA,qBAAKE,GAAG,UAAR,SACE,cAAC,IAAD,UAAgBJ,eCTfS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.efe4af7d.chunk.js","sourcesContent":["\nimport React, {useState} from 'react';\nimport ReactMarkdown from 'react-markdown';\n\nconst App = () => {\n  // const initialInput = '### Header'\n  const [input, setInput] = useState('# Header \\n # Sub-Header \\n [links](https://www.freecodecamp.org) \\n `<div></div>` \\n ```function``` \\n * List \\n > This is a blockquote \\n ![freeCodeCamp Logo](https://cdn.freecodecamp.org/testable-projects-fcc/images/fcc_secondary.svg)');\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <div class=\"text-editor\" className=\"row mt-4\">\n            <h1>\n              Editor\n            </h1>\n            <textarea id=\"editor\" onChange={(event) => setInput(event.target.value)} value={input}></textarea>\n          </div>\n          <div class=\"text-preview\" className=\"row mt-6\">\n            <h1>\n              Previewer\n            </h1>\n            <div id=\"preview\">\n              <ReactMarkdown>{input}</ReactMarkdown>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}